# iterm2 notes
# set edit>selection respects soft boundaries
# use this https://github.com/tmux-plugins/tmux-yank
## and Preferences -> Applications in terminal may access keyboard

### PLUGINS
# I put them in ~/.tmux/
# tmux-yank
# git clone https://github.com/tmux-plugins/tmux-yank ~/.tmux/tmux_yank
# tmux-yank gives sane copy/paste modes
run-shell ~/.tmux/tmux_yank/yank.tmux

### copy/paste vi style
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# mouse integration. allows scrollback w/ mouse.
set-option -g mouse on

# unreasonable scrollback limit. RIP Memory
set-option -g history-limit 1000000

# Set new windows/panes to $PWD
# via https://coderwall.com/p/jpsa7q/tmux-windows-and-pane-split-s-on-current-directory
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Make split window SSH to the server (NOTE, window is named after SSH session)
# window gets renamed from custom function in ~/.zshrc
bind-key S run "tmux split-window ssh $(tmux display-message -p '#W')"

#COLORS.
set -g default-terminal "screen-256color"
set -g status-bg blue
set -g status-fg white

#MORECOLORS
set -g pane-border-fg red
set -g pane-active-border-fg blue
set -g pane-active-border-bg default